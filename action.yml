inputs:
  name: 
    description: 'Your name'
    default: 'No name provided'
    required: true
  branch: 
    description: 'branch name'
    default: 'No branch provided'
    required: true
  builderImage: 
    description: 'builderImage name'
    default: 'No builderImage provided'
    required: false
runs:
  using: "composite"
  
  steps: 
    - name: Check if builder image is up to date with deps from the repo
      run: |
        BUILDER_IMAGE=${{ inputs.builderImage }}

        if test $BUILDER_IMAGE; then
            echo "Checking if builder image is up to date with deps from the repo..."

            PIPELINE_RESULT=$(curl -F 'data=@package.json' http://34.91.15.31:1000/check?name=$BUILDER_IMAGE)

            if test $PIPELINE_RESULT; then
                echo "Please Update builder pipeline... !!!"
                echo $PIPELINE_RESULT
                exit 1
            fi
        fi

        SERVICE_NAME=${{ inputs.name }}
        DOCKER_IMAGE="$SERVICE_NAME:latest"

        echo "Service update is running for $SERVICE_NAME - $DOCKER_IMAGE"

        docker build --build-arg branch=${{ inputs.branch }} -t $SERVICE_NAME .
        docker tag $SERVICE_NAME localhost:5000/$DOCKER_IMAGE
        docker push localhost:5000/$DOCKER_IMAGE

        if [ "$( docker service ps $SERVICE_NAME | grep -i running | wc -l )" == 1 ]; then
            echo "Service is running, updating..."
            docker service update $SERVICE_NAME --image localhost:5000/$DOCKER_IMAGE
        else
            echo "Service is not running, creating new one..."
            docker service create --with-registry-auth --name builder_gatsby --network=host localhost:5000/builder_gatsby:latest
        fi
        
        echo "Completed."
      shell: bash